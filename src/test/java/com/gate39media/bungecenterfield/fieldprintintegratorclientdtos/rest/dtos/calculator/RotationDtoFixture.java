package com.gate39media.bungecenterfield.fieldprintintegratorclientdtos.rest.dtos.calculator;

import com.gate39media.bungecenterfield.fieldprintintegratorclientdtos.rest.dtos.commons.ValueUnitDtoFixure;

import java.util.Arrays;
import java.util.Collections;

public class RotationDtoFixture {

    public static RotationDto newInstance() {
        return RotationDto.builder()
                .cropCalibrationMode(false)
                .year(2017)
                .cropId(2)
                .previousCropResidueBurned(false)
                .previousYield(ValueUnitDtoFixure.fromUnitAndValue("bu/ac", 0.0))
                .previousCropId(1)
                .alfalfaResidueId(2)
                .riceResidueId(1)
                .predominantRotationPracticeId(2)
                .coverCrop(false)
                .tillageClassId(2)
                .crlmodId(270639)
                .conservationPracticeIds(Arrays.asList(1, 2))
                .windBarrier(false)
                .tileDrainageId(1)
                .riceWaterRegimeId(1)
                .nutrientPlan(false)
                .nutrient4rIds(Arrays.asList(1, 3))
                .soilConditionId(1)
                .applicationRateId(7)
                .applicationMethodId(3)
                .integratedPestManagementId(9)
                .landConversion(false)
                .landConversionTypeId(2)
                .landConversionAcres(ValueUnitDtoFixure.fromUnitAndValue("ac", 0.0))
                .wildlifeHabitatIds(Arrays.asList(1, 2))
                .limeYearApplied(2018)
                .limeYearsApplicable(ValueUnitDtoFixure.fromUnitAndValue("yr", 2.0))
                .limeAmount(ValueUnitDtoFixure.fromUnitAndValue("tc/ac", 15.0))
                .riceSulfateAmt(ValueUnitDtoFixure.fromUnitAndValue("lbs/ac", 15.0))
                .isIrrigated(true)
                .irrigationMethodId(2)
                .waterSourceId(1)
                .irrigationWaterConservation(false)
                .irrigation(ValueUnitDtoFixure.fromUnitAndValue("ac_in/ac", 8.0))
                .irrigationEnergy(true)
                .irrigationEnergyExact(false)
                .pumpPressureId(8)
                .pumpingDepthId(5)
                .energySourceId(4)
                .irrigationElectricAmt(ValueUnitDtoFixure.fromUnitAndValue("kWh", 0.0))
                .irrigationFuelId(3)
                .irrigationFuelAmt(ValueUnitDtoFixure.fromUnitAndValue("gal", 0.0))
                .secondaryIrrigation(ValueUnitDtoFixure.fromUnitAndValue("ac_in/ac", 2.0))
                .secondaryPumpPressureId(1)
                .secondaryPumpingDepthId(1)
                .secondaryEnergySourceId(1)
                .secondaryIrrigationElectricAmt(ValueUnitDtoFixure.fromUnitAndValue("kWh", 20.0))
                .secondaryIrrigationFuelId(1)
                .secondaryIrrigationFuelAmt(ValueUnitDtoFixure.fromUnitAndValue("gal", 20.0))
                .seedingRateId(14)
                .seedTreatment(false)
                .ricePlantingMethodId(2)
                .riceCultivarId(2)
                .abandonedHarvestedAcres(ValueUnitDtoFixure.fromUnitAndValue("ac", 30.0))
                .reasonId(2)
                .yield(ValueUnitDtoFixure.fromUnitAndValue("bu/ac", 75.0))
                .estNonIrrigatedYield(ValueUnitDtoFixure.fromUnitAndValue("bu/ac", 50.0))
                .alfalfaEstablishmentYear(2018)
                .alfalfaExpectedStandLife(ValueUnitDtoFixure.fromUnitAndValue("yr", 2.0))
                .riceRatoonCrop(false)
                .riceYieldCalcMethodId(1)
                .riceAvgHarvestMoisture(ValueUnitDtoFixure.fromUnitAndValue("%", 0.0))
                .beetsPerctSugar(ValueUnitDtoFixure.fromUnitAndValue("%", 0.0))
                .peanutsInitialMoisture(ValueUnitDtoFixure.fromUnitAndValue("%", 0.0))
                .fieldToPosDistance(ValueUnitDtoFixure.fromUnitAndValue("miles", 45.0))
                .transFuelTypeId(16)
                .transBackHaul(false)
                .cottonMoistureId(1)
                .dryingSystemsId(3)
                .dryingEnergySourceId(1)
                .dryingElectricAmt(ValueUnitDtoFixure.fromUnitAndValue("kWh", 20.5))
                .dryingFuelId(1)
                .dryingFuelAmt(ValueUnitDtoFixure.fromUnitAndValue("gal", 30.8))
                .cropLevelMoistureDiff(ValueUnitDtoFixure.fromUnitAndValue("%", 8.0))
                .applicationTrips(Collections.singletonList(ApplicationTripDtoFixture.newInstance()))
                .manureApps(Collections.singletonList(ManureAppDtoFixture.newInstance()))
                .build();
    }
}